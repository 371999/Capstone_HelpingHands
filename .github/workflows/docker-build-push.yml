name: Build and Push Docker Images

on:
  push:
    branches:
      - shreyas
    paths:
      - "frontend/**"
      - "backend/**"
  workflow_dispatch:

jobs:
  build-and-push-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    env:
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Set Initial Version Numbers
        run: |
          # Initialize version numbers for frontend and backend
          FRONTEND_VERSION="v1"
          BACKEND_VERSION="v1"
          
          # Export version numbers for use in other steps
          echo "FRONTEND_VERSION=${FRONTEND_VERSION}" >> $GITHUB_ENV
          echo "BACKEND_VERSION=${BACKEND_VERSION}" >> $GITHUB_ENV

      - name: Determine if frontend changed
        id: frontend_changed
        run: |
          PREVIOUS_SHA="${{ github.event.before }}"
          CURRENT_SHA="${{ github.sha }}"
          if [ -z "$PREVIOUS_SHA" ]; then
            echo "No previous commit; assuming full build required."
            echo "build_frontend=true" >> $GITHUB_ENV
          elif git diff --name-only "$PREVIOUS_SHA" "$CURRENT_SHA" | grep -q '^frontend/'; then
            echo "Frontend changed."
            echo "build_frontend=true" >> $GITHUB_ENV
          else
            echo "Frontend not changed."
            echo "build_frontend=false" >> $GITHUB_ENV
          fi

      - name: Determine if backend changed
        id: backend_changed
        run: |
          PREVIOUS_SHA="${{ github.event.before }}"
          CURRENT_SHA="${{ github.sha }}"
          if [ -z "$PREVIOUS_SHA" ]; then
            echo "No previous commit; assuming full build required."
            echo "build_backend=true" >> $GITHUB_ENV
          elif git diff --name-only "$PREVIOUS_SHA" "$CURRENT_SHA" | grep -q '^backend/'; then
            echo "Backend changed."
            echo "build_backend=true" >> $GITHUB_ENV
          else
            echo "Backend not changed."
            echo "build_backend=false" >> $GITHUB_ENV
          fi

      - name: Increment Frontend Version
        if: env.build_frontend == 'true'
        run: |
          # Retrieve the current frontend version and increment it
          FRONTEND_VERSION_NUMBER=${FRONTEND_VERSION//[!0-9]/}
          NEW_FRONTEND_VERSION="v$((FRONTEND_VERSION_NUMBER + 1))"
          echo "FRONTEND_VERSION=${NEW_FRONTEND_VERSION}" >> $GITHUB_ENV

      - name: Increment Backend Version
        if: env.build_backend == 'true'
        run: |
          # Retrieve the current backend version and increment it
          BACKEND_VERSION_NUMBER=${BACKEND_VERSION//[!0-9]/}
          NEW_BACKEND_VERSION="v$((BACKEND_VERSION_NUMBER + 1))"
          echo "BACKEND_VERSION=${NEW_BACKEND_VERSION}" >> $GITHUB_ENV

      - name: Build and Push Frontend Image
        if: env.build_frontend == 'true'
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:${FRONTEND_VERSION} -f frontend/Dockerfile ./frontend
          docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:${FRONTEND_VERSION}

      - name: Build and Push Backend Image
        if: env.build_backend == 'true'
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/backend:${BACKEND_VERSION} -f backend/Dockerfile ./backend
          docker push ${{ env.ACR_LOGIN_SERVER }}/backend:${BACKEND_VERSION}
