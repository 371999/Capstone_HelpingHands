name: Build and Push Docker Images

on:
  push:
    branches:
      - shreyas
    paths:
      - "frontend/**"
      - "backend/**"
  workflow_dispatch:

jobs:
  build-and-push-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    env:
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history to ensure access to previous commit

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Read and Increment Version
        id: version
        run: |
          # Check if VERSION file exists; create it with v1 if missing
          if [ ! -f VERSION ]; then
            echo "v1" > VERSION
          fi
          
          # Read the current version from the VERSION file
          VERSION=$(cat VERSION)
          
          # Extract the numeric part of the version (e.g., v1 -> 1)
          VERSION_NUMBER=${VERSION//[!0-9]/}
          
          # Increment the version number
          NEW_VERSION_NUMBER=$((VERSION_NUMBER + 1))
          
          # Create the new version tag (e.g., v2)
          NEW_VERSION="v${NEW_VERSION_NUMBER}"
          
          # Save the new version tag to VERSION file
          echo "${NEW_VERSION}" > VERSION
          
          # Make the version available to other steps
          echo "IMAGE_TAG=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Commit Updated Version File
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git add VERSION
          git commit -m "Increment version to ${IMAGE_TAG}"
          git push

      - name: Commit Updated Version File
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"
          git add VERSION
          git commit -m "Increment version to ${IMAGE_TAG}"
          git push https://${GH_PAT}@github.com/371999/Capstone_HelpingHands.git HEAD:${{ github.ref }}

      - name: Determine if frontend changed
        id: frontend_changed
        run: |
          PREVIOUS_SHA="${{ github.event.before }}"
          CURRENT_SHA="${{ github.sha }}"
          if [ -z "$PREVIOUS_SHA" ]; then
            echo "No previous commit; assuming full build required."
            echo "build_frontend=true" >> $GITHUB_ENV
          elif git diff --name-only "$PREVIOUS_SHA" "$CURRENT_SHA" | grep -q '^frontend/'; then
            echo "Frontend changed."
            echo "build_frontend=true" >> $GITHUB_ENV
          else
            echo "Frontend not changed."
            echo "build_frontend=false" >> $GITHUB_ENV
          fi

      - name: Determine if backend changed
        id: backend_changed
        run: |
          PREVIOUS_SHA="${{ github.event.before }}"
          CURRENT_SHA="${{ github.sha }}"
          if [ -z "$PREVIOUS_SHA" ]; then
            echo "No previous commit; assuming full build required."
            echo "build_backend=true" >> $GITHUB_ENV
          elif git diff --name-only "$PREVIOUS_SHA" "$CURRENT_SHA" | grep -q '^backend/'; then
            echo "Backend changed."
            echo "build_backend=true" >> $GITHUB_ENV
          else
            echo "Backend not changed."
            echo "build_backend=false" >> $GITHUB_ENV
          fi

      - name: Build and Push Frontend Image
        if: env.build_frontend == 'true'
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:${IMAGE_TAG} -f frontend/Dockerfile ./frontend
          docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:${IMAGE_TAG}

      - name: Build and Push Backend Image
        if: env.build_backend == 'true'
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/backend:${IMAGE_TAG} -f backend/Dockerfile ./backend
          docker push ${{ env.ACR_LOGIN_SERVER }}/backend:${IMAGE_TAG}
