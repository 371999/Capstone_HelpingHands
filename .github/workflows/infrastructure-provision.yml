name: Provision Infrastructure with Terraform

on:
  push:
    branches:
      - shreyas
    paths:
      - "azure-terraform/**"
  workflow_dispatch:

jobs:
  provision-infrastructure:
    name: Provision Infrastructure with Terraform
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
      BACKEND_RESOURCE_GROUP_NAME: "tfstate-resource-group"
      BACKEND_STORAGE_ACCOUNT_NAME: "yourstorageaccountname"  # Must be globally unique
      BACKEND_CONTAINER_NAME: "tfstate"
      BACKEND_KEY: "dev.tfstate"
      BACKEND_LOCATION: "eastus"

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: '{"clientId": "${{ secrets.AZURE_CLIENT_ID }}", "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}"}'
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Azure Backend for Terraform State
        run: |
          #!/bin/bash
          set -e

          # Check if Resource Group exists
          if ! az group show -n $BACKEND_RESOURCE_GROUP_NAME &>/dev/null; then
            echo "Creating Resource Group: $BACKEND_RESOURCE_GROUP_NAME"
            az group create -n $BACKEND_RESOURCE_GROUP_NAME -l $BACKEND_LOCATION
          else
            echo "Resource Group $BACKEND_RESOURCE_GROUP_NAME already exists."
          fi

          # Check if Storage Account exists
          if ! az storage account show -n $BACKEND_STORAGE_ACCOUNT_NAME -g $BACKEND_RESOURCE_GROUP_NAME &>/dev/null; then
            echo "Creating Storage Account: $BACKEND_STORAGE_ACCOUNT_NAME"
            az storage account create -n $BACKEND_STORAGE_ACCOUNT_NAME -g $BACKEND_RESOURCE_GROUP_NAME -l $BACKEND_LOCATION --sku Standard_LRS
          else
            echo "Storage Account $BACKEND_STORAGE_ACCOUNT_NAME already exists."
          fi

          # Retrieve Storage Account Key
          ACCOUNT_KEY=$(az storage account keys list -g $BACKEND_RESOURCE_GROUP_NAME -n $BACKEND_STORAGE_ACCOUNT_NAME --query '[0].value' -o tsv)

          # Check if Container exists
          if ! az storage container show -n $BACKEND_CONTAINER_NAME --account-name $BACKEND_STORAGE_ACCOUNT_NAME --account-key $ACCOUNT_KEY &>/dev/null; then
            echo "Creating Storage Container: $BACKEND_CONTAINER_NAME"
            az storage container create -n $BACKEND_CONTAINER_NAME --account-name $BACKEND_STORAGE_ACCOUNT_NAME --account-key $ACCOUNT_KEY
          else
            echo "Storage Container $BACKEND_CONTAINER_NAME already exists."
          fi

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        working-directory: azure-terraform
        run: |
          terraform init \
            -backend-config="resource_group_name=$BACKEND_RESOURCE_GROUP_NAME" \
            -backend-config="storage_account_name=$BACKEND_STORAGE_ACCOUNT_NAME" \
            -backend-config="container_name=$BACKEND_CONTAINER_NAME" \
            -backend-config="key=$BACKEND_KEY"

      - name: Terraform Apply
        working-directory: azure-terraform
        run: |
          terraform apply -auto-approve
