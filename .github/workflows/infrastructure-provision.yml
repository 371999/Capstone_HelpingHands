name: Terraform Provisioning
on:
  push:
    branches:
      - shreyas
    paths:
      - "azure-terraform/**"
  workflow_dispatch:

jobs:
  provision-infrastructure: 
    name: Provision Infrastructure with Terraform
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          cd azure-terraform
          terraform init

      - name: Terraform Apply
        run: |
          cd azure-terraform
          terraform apply -auto-approve
          
      - name: Capture Outputs
        id: outputs
        run: |
          echo "ACR_USERNAME=$(terraform output -raw acr_username)" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$(terraform output -raw acr_password)" >> $GITHUB_ENV
          echo "VM_PUBLIC_IP=$(terraform output -raw vm_public_ip)" >> $GITHUB_ENV
          echo "ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)" >> $GITHUB_ENV

      - name: Update GitHub Secrets with Outputs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needs write permissions
          REPO: ${{ github.repository }}
        run: |
          # Define the secrets to update
          for secret in ACR_USERNAME ACR_PASSWORD VM_PUBLIC_IP ACR_LOGIN_SERVER; do
            curl -X PUT -H "Authorization: Bearer $GITHUB_TOKEN" \
                 -H "Accept: application/vnd.github.v3+json" \
                 https://api.github.com/repos/$REPO/actions/secrets/$secret \
                 -d '{"encrypted_value":"'${{ secrets[$secret] }}'"}'
          done

