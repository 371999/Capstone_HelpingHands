name: Terraform Provisioning
on:
  push:
    branches:
      - shreyas
    paths:
      - "azure-terraform/**"
  workflow_dispatch:

jobs:
  provision-infrastructure: 
    name: Provision Infrastructure with Terraform
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          cd azure-terraform
          terraform init

      - name: Apply Terraform Configuration
        run: |
          cd azure-terraform
          terraform apply -auto-approve

      - name: Capture Outputs
        id: capture_outputs
        run: |
          cd azure-terraform
          # Check if the state file has been saved properly
          terraform state list || exit 1
          # Capture Terraform outputs and write them to a file
          echo "VM_PUBLIC_IP=$(terraform output -raw vm_public_ip)" > ../terraform_outputs.txt
          echo "ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)" >> ../terraform_outputs.txt
          echo "ACR_USERNAME=$(terraform output -raw acr_username)" >> ../terraform_outputs.txt
          echo "ACR_PASSWORD=$(terraform output -raw acr_password)" >> ../terraform_outputs.txt

      - name: Upload Outputs as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: terraform-outputs
          path: terraform_outputs.txt

  update-env-files:
    name: Update .env Files with Terraform Outputs
    runs-on: ubuntu-latest
    needs: provision-infrastructure
    steps:
      - name: Download Outputs Artifact
        uses: actions/download-artifact@v3
        with:
          name: terraform-outputs

      - name: Extract VM Public IP from Artifact
        id: extract_ip
        run: |
          # Extract the IP and save to GITHUB_ENV
          VM_PUBLIC_IP=$(grep 'VM_PUBLIC_IP=' terraform_outputs.txt | cut -d '=' -f2)
          echo "VM_PUBLIC_IP=$VM_PUBLIC_IP" >> $GITHUB_ENV
        shell: bash

      - name: Debug VM_PUBLIC_IP
        run: |
          echo "VM_PUBLIC_IP is: ${{ env.VM_PUBLIC_IP }}"

      - name: Update Frontend .env File
        run: |
          cd frontend
          sed -i "s|NEXT_PUBLIC_API_URL=http://localhost:8080|NEXT_PUBLIC_API_URL=http://${{ env.VM_PUBLIC_IP }}:8080|g" .env
          sed -i "s|NEXT_PUBLIC_AUTH_URL=http://localhost:8080|NEXT_PUBLIC_AUTH_URL=http://${{ env.VM_PUBLIC_IP }}:8080|g" .env

      - name: Update Backend .env File
        run: |
          cd backend
          sed -i "s|FRONTEND_URL=http://localhost:3000|FRONTEND_URL=http://${{ env.VM_PUBLIC_IP }}:3000|g" .env

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add frontend/.env backend/.env
          git commit -m "Update .env files with VM public IP" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-secrets:
    name: Update GitHub Secrets with Terraform Outputs
    runs-on: ubuntu-latest
    needs: provision-infrastructure
    steps:
      - name: Download Outputs Artifact
        uses: actions/download-artifact@v3
        with:
          name: terraform-outputs

      - name: Update GitHub Secrets
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          # Read outputs from the artifact file and update secrets
          while IFS= read -r line; do
            key=$(echo $line | cut -d '=' -f 1)
            value=$(echo $line | cut -d '=' -f 2)
            echo "Updating secret $key..."
            curl -X PUT -H "Authorization: Bearer $PAT_TOKEN" \
                 -H "Accept: application/vnd.github.v3+json" \
                 https://api.github.com/repos/${{ github.repository }}/actions/secrets/$key \
                 -d "{\"encrypted_value\":\"$value\"}"
          done < terraform_outputs.txt
